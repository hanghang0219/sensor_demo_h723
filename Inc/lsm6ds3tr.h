//
// Created by hanghang on 24-7-26.
//

#ifndef LSM6DS3TR_H
#define LSM6DS3TR_H

#include "i2c.h"
#define LSM6DS3TR_READ 0XD5
#define LSM6DS3TR_WRITE 0XD4

/* reg addr */
#define LSM6DS3TR_ID_ADD 0X0F
#define LSM6DS3TR_CTRL1_XL 0X10  // acceleration reg
#define LSM6DS3TR_CTRL2_G 0X11   // gyroscope reg
#define LSM6DS3TR_CTRL3_C_ADD \
  0X12  // reset & addr auto increase & bdu update auto
#define LSM6DS3TR_CTRL8_XL 0X17
#define LSM6DS3TR_CTRL7_G 0X16
#define LSM6DS3TRC_CTRL6_C 0x15
#define LSM6DS3TRC_CTRL4_C 0x13
#define LSM6DS3TRC_STATUS_REG 0x1E
#define LSM6DS3TRC_OUTX_L_XL 0x28
#define LSM6DS3TRC_OUTX_L_G 0x22
#define LSM6DS3TRC_OUT_TEMP_L 0x20
/* common value */
#define LSM6DS3TR_CTRL3_C_VALUE 0X84
#define LSM6DS3TRC_STATUS_TEMPERATURE 0x04
#define LSM6DS3TRC_STATUS_GYROSCOPE 0x02
#define LSM6DS3TRC_STATUS_ACCELEROMETER 0x01

// Linear acceleration out data rate
#define LSM6DS3TRC_ACC_RATE_0 0x00
#define LSM6DS3TRC_ACC_RATE_1HZ6 0xB0
#define LSM6DS3TRC_ACC_RATE_12HZ5 0x10
#define LSM6DS3TRC_ACC_RATE_26HZ 0x20
#define LSM6DS3TRC_ACC_RATE_52HZ 0x30
#define LSM6DS3TRC_ACC_RATE_104HZ 0x40
#define LSM6DS3TRC_ACC_RATE_208HZ 0x50
#define LSM6DS3TRC_ACC_RATE_416HZ 0x60
#define LSM6DS3TRC_ACC_RATE_833HZ 0x70
#define LSM6DS3TRC_ACC_RATE_1660HZ 0x80
#define LSM6DS3TRC_ACC_RATE_3330HZ 0x90
#define LSM6DS3TRC_ACC_RATE_6660HZ 0xA0
//Accelerometer full-scale.
#define LSM6DS3TRC_ACC_FSXL_2G 0x00
#define LSM6DS3TRC_ACC_FSXL_16G 0x04
#define LSM6DS3TRC_ACC_FSXL_4G 0x08
#define LSM6DS3TRC_ACC_FSXL_8G 0x0C
//Accelerometer analog chain bandwidth
#define LSM6DS3TRC_ACC_BW0XL_1500HZ 0x00
#define LSM6DS3TRC_ACC_BW0XL_400HZ 0x01
//Accelerometer bandwidth selection
#define LSM6DS3TRC_ACC_LOW_PASS_ODR_50 0x88
#define LSM6DS3TRC_ACC_LOW_PASS_ODR_100 0xA8
#define LSM6DS3TRC_ACC_LOW_PASS_ODR_9 0xC8
#define LSM6DS3TRC_ACC_LOW_PASS_ODR_400 0xE8

// Linear gyroscope out data rate
#define LSM6DS3TRC_GYR_RATE_0 0x00
#define LSM6DS3TRC_GYR_RATE_1HZ6 0xB0
#define LSM6DS3TRC_GYR_RATE_12HZ5 0x10
#define LSM6DS3TRC_GYR_RATE_26HZ 0x20
#define LSM6DS3TRC_GYR_RATE_52HZ 0x30
#define LSM6DS3TRC_GYR_RATE_104HZ 0x40
#define LSM6DS3TRC_GYR_RATE_208HZ 0x50
#define LSM6DS3TRC_GYR_RATE_416HZ 0x60
#define LSM6DS3TRC_GYR_RATE_833HZ 0x70
#define LSM6DS3TRC_GYR_RATE_1660HZ 0x80
#define LSM6DS3TRC_GYR_RATE_3330HZ 0x90
#define LSM6DS3TRC_GYR_RATE_6660HZ 0xA0
//Gyroscope full-scale.
#define LSM6DS3TRC_GYR_FSG_245 0x00
#define LSM6DS3TRC_GYR_FSG_500 0x04
#define LSM6DS3TRC_GYR_FSG_1000 0x08
#define LSM6DS3TRC_GYR_FSG_2000 0x0C
#define LSM6DS3TRC_CTRL1_XL 0x10
#define LSM6DS3TRC_CTRL8_XL 0x17

//CTRL7_G register
#define LSM6DS3TRC_CTRL7_G_HM_MODE_ENABLE 0x00
#define LSM6DS3TRC_CTRL7_G_HM_MODE_DISABLE 0x80
#define LSM6DS3TRC_CTRL7_G_HP_EN_DISABLE 0x00
#define LSM6DS3TRC_CTRL7_G_HP_EN_ENABLE 0x40
#define LSM6DS3TRC_CTRL7_G_HPM_16MHZ 0x00
#define LSM6DS3TRC_CTRL7_G_HPM_65MHZ 0x10
#define LSM6DS3TRC_CTRL7_G_HPM_260MHZ 0x20
#define LSM6DS3TRC_CTRL7_G_HPM_1HZ04 0x30
#define LSM6DS3TRC_CTRL7_G_ROUNDING_STATUS_DISABLE 0x04
#define LSM6DS3TRC_CTRL7_G_ROUNDING_STATUS_ENABLE 0x00

//CTRL6_C register
#define LSM6DS3TRC_CTRL6_C_EDGE_TRIGGER 0x80
#define LSM6DS3TRC_CTRL6_C_LEVEL_TRIGGER 0x40
#define LSM6DS3TRC_CTRL6_C_LEVEL_LATCHED 0x60
#define LSM6DS3TRC_CTRL6_C_LEVEL_FIFO 0xC0
#define LSM6DS3TRC_CTRL6_C_XL_HM_MODE_ENABLE 0x00
#define LSM6DS3TRC_CTRL6_C_XL_HM_MODE_DISABLE 0x10
#define LSM6DS3TRC_CTRL6_C_FTYPE_1 0x00
#define LSM6DS3TRC_CTRL6_C_FTYPE_2 0x01
#define LSM6DS3TRC_CTRL6_C_FTYPE_3 0x02
#define LSM6DS3TRC_CTRL6_C_FTYPE_4 0x03

//CTRL4_C register
#define LSM6DS3TRC_CTRL4_DEN_XL_EN_DISABLE 0x00
#define LSM6DS3TRC_CTRL4_DEN_XL_EN_ENABLE 0x80
#define LSM6DS3TRC_CTRL4_SLEEP_ENABLE 0x40
#define LSM6DS3TRC_CTRL4_SLEEP_DISABLE 0x00
#define LSM6DS3TRC_CTRL4_DEN_DRDY_INT1_DISBALE 0x00
#define LSM6DS3TRC_CTRL4_DEN_DRDY_INT1_ENABLE 0x20
#define LSM6DS3TRC_CTRL4_DRDY_MASK_DISABLE 0x00
#define LSM6DS3TRC_CTRL4_DRDY_MASK_ENABLE 0x08
#define LSM6DS3TRC_CTRL4_I2C_DISABLE 0x04
#define LSM6DS3TRC_CTRL4_I2C_ENABLE 0x00
#define LSM6DS3TRC_CTRL4_LPF1_SELG_ENABLE 0x02
#define LSM6DS3TRC_CTRL4_LPF1_SELG_DISABLE 0x00

typedef enum {
  LSM6DS3TR_OK,
  LSM6DS3TR_ID_ERR,
  LSM6DS3TR_RESET_ERR,
  LSM6DS3TR_ACC_PARAM_ERR,
  LSM6DS3TR_GYR_PARAM_ERR,
  LSM6DS3TR_ACC_BANDWIDTH_ERR,
  LSM6DS3TR_REG7_ERR,
  LSM6DS3TR_REG6_ERR,
  LSM6DS3TR_REG4_ERR,
  LSM6DS3TR_STATUS_UPDATE_ERR,
  LSM6DS3TR_TX_ERR,
  LSM6DS3TR_RX_ERR,
  LSM6DS3TR_ERR
} Lsm6ds3trErr;

#define LSM6DS3TR_FLAG_UPDATED 01
#define LSM6DS3TR_FLAG_UNUPDATE 02

typedef struct {
  I2C_HandleTypeDef *i2c;
  Lsm6ds3trErr err_st;
  char data_buf[14];
  float acc_x;
  float acc_y;
  float acc_z;
  float gyr_x;
  float gyr_y;
  float gyr_z;
  int16_t temp;
  uint8_t flag;
} Lsm6ds3tr;

int lsm6ds3tr_reg_init(Lsm6ds3tr *ins);
void lsm6ds3tr_init(Lsm6ds3tr *ins, I2C_HandleTypeDef *i2c);
void lsm6ds3tr_output_read_cb(Lsm6ds3tr *ins);
void lsm6ds3tr_acc_gry_output(Lsm6ds3tr *ins);
void test2();
#endif  //LSM6DS3TR_H
